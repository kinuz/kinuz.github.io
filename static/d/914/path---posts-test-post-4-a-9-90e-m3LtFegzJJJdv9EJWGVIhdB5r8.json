{"data":{"site":{"siteMetadata":{"title":"Kinuz Blog","subtitle":"","copyright":"© All rights reserved.","author":{"name":"Kinuz","twitter":"#"},"disqusShortname":"NuzHome","url":"https://kinuz.netlify.com"}},"markdownRemark":{"id":"df16fc04-5d07-5a13-aeb2-e1074416ed05","html":"<ul>\n<li>vagrant-provisioning.yml</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># vatrant provisioning \n---\n- name: Server Provisioning\n  hosts: all\n  become: true\n  tasks:\n    - name: update repository\n      replace:\n        path: /etc/apt/sources.list\n        regexp: &quot;{{ item }}&quot;\n        replace: &#39;mirror.kakao.com&#39;\n      with_items:\n        - &#39;kr.archive.ubuntu.com&#39;\n        - &#39;archive.ubuntu.com&#39;\n        - &#39;security.ubuntu.com&#39;\n    \n    - name: apt-get update\n      apt:\n        update-cache: yes\n      changed_when: 0\n      ignore_errors: yes\n    \n    - name: Upgrading all packages (Ubuntu/Debian)\n      apt:\n        upgrade: dist\n        force: yes\n    \n    - name: Install prerequisites\n      apt:\n        name:\n          - curl\n          - vim\n          - htop\n          - build-essential\n          - python3-pip\n        force: yes\n        state: present\n    \n    - name: Add Docker apt key.\n      apt_key:\n        url: https://download.docker.com/linux/ubuntu/gpg\n        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88\n        state: present\n      register: docker_apt_key_added\n    \n    - name: Add Docker repository.\n      shell: add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;\n     \n    - name: update apt cache\n      apt:\n        update-cache: yes\n      ignore_errors: yes\n    \n    - name: Install Docker\n      apt:\n        name:\n          - docker-ce\n          - docker-ce-cli\n          - containerd.io\n        force: yes\n        state: present\n    - name: Restart docker\n      service:\n        name: docker\n        state: restarted\n      ignore_errors: yes\n    \n    - name: add group\n      user:\n        name: vagrant\n        groups: docker\n        append: yes\n    \n    - name: pip docker\n      pip:\n        name:\n          - docker\n          - docker-compose\n    \n    - name: create docker-daemon.json\n      copy:\n        dest: /etc/docker/daemon.json\n        content: |\n          {\n            &quot;userland-proxy&quot;: false\n          }\n    \n    - name: restart docker\n      service:\n        state: restarted\n        name: docker\n      when: configure_docker_daemon.changed\n      ignore_errors: yes\n     \n    - name: optimize\n      command: &quot;{{ item }}&quot;\n      with_items:\n        - apt-get clean\n        - rm -rf /var/lib/apt/lists/*\n        - dd if=/dev/zero of=/EMPTY bs=1M\n        - rm -f /EMPTY\n        - cat /dev/null &gt; ~/.bash_history &amp;&amp; history -c</code></pre></div>\n<ul>\n<li>Vagrantfile</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Vagrant.require_version &quot;&gt;= 1.7.0&quot;\n\nVagrant.configure(&quot;2&quot;) do |config|\n  \n  config.vm.define &quot;devops1&quot; do |s|\n    \n    s.vm.box = &quot;ubuntu/xenial64&quot;\n    s.vm.network &quot;private_network&quot;, ip: &quot;192.168.10.101&quot;\n     \n    config.vm.provision &quot;ansible&quot; do |ansible|\n      ansible.verbose = &quot;v&quot;\n      ansible.playbook = &quot;vagrant-provisioning.yml&quot;\n    end\n     \n    s.vm.provider :virtualbox do |vb|\n      vb.name = &quot;Server1&quot;\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--memory&quot;, 1024]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--cpus&quot;, &quot;1&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--ioapic&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype1&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype2&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnshostresolver1&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnsproxy1&quot;, &quot;on&quot;]\n    end\n  end\nend</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vagrant up</code></pre></div>","fields":{"tagSlugs":["/tags/vagrant/","/tags/provisioning/"]},"frontmatter":{"title":"Vagrant 환경으로 Docker 클러스터 구축","tags":["vagrant","provisioning"],"date":"2019-04-09T16:51:00.000Z","description":"Provisioning Vagrant multi-machines with Ansible"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/test-post/"}}