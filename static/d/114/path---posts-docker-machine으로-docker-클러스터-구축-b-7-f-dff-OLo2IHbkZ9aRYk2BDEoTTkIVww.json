{"data":{"site":{"siteMetadata":{"title":"Kinuz Blog","subtitle":"","copyright":"Â© All rights reserved.","author":{"name":"Kinuz","twitter":"#"},"disqusShortname":"NuzHome","url":"https://kinuz.netlify.com"}},"markdownRemark":{"id":"fedd9ffd-e221-55e7-9a91-867f6b799fe2","html":"<h3>ansible.cfg</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[defaults]\ninventory      = hosts\nhost_key_checking = False\nremote_user = vagrant\ncommand_warnings = False</code></pre></div>\n<h3>hosts</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[local]\n\nlocalhost ansible_connection=local\n\n\n[vagrant]\n192.168.10.101\n192.168.10.102\n192.168.10.103</code></pre></div>\n<h3>Create provisioning file for ansible</h3>\n<ul>\n<li>vagrant-provisioning.yml</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># vatrant provisioning \n---\n- name: Server Provisioning\n  hosts: localhost\n  become: true\n  tasks:\n    - name: update repository\n      replace:\n        path: /etc/apt/sources.list\n        regexp: &quot;{{ item }}&quot;\n        replace: &#39;mirror.kakao.com&#39;\n      with_items:\n        - &#39;kr.archive.ubuntu.com&#39;\n        - &#39;archive.ubuntu.com&#39;\n        - &#39;security.ubuntu.com&#39;\n    \n    - name: apt-get update\n      apt:\n        update-cache: yes\n      changed_when: 0\n      ignore_errors: yes\n    \n    - name: Upgrading all packages (Ubuntu/Debian)\n      apt:\n        upgrade: dist\n        force: yes\n    \n    - name: Install prerequisites\n      apt:\n        name:\n          - curl\n          - vim\n          - htop\n          - build-essential\n          - python3-pip\n        force: yes\n        state: present\n    \n    - name: Add Docker apt key.\n      apt_key:\n        url: https://download.docker.com/linux/ubuntu/gpg\n        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88\n        state: present\n      register: docker_apt_key_added\n    \n    - name: Add Docker repository.\n      shell: add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;\n     \n    - name: update apt cache\n      apt:\n        update-cache: yes\n      ignore_errors: yes\n    \n    - name: Install Docker\n      apt:\n        name:\n          - docker-ce\n          - docker-ce-cli\n          - containerd.io\n        force: yes\n        state: present\n    \n    - name: Restart docker\n      service:\n        name: docker\n        state: restarted\n      ignore_errors: yes\n    \n    - name: add group\n      user:\n        name: vagrant\n        groups: docker\n        append: yes\n    \n    - name: pip docker\n      pip:\n        name:\n          - docker\n          - docker-compose\n    \n    - name: create docker-daemon.json\n      copy:\n        dest: /etc/docker/daemon.json\n        content: |\n          {\n            &quot;userland-proxy&quot;: false\n          }\n    \n    - name: optimize\n      command: &quot;{{ item }}&quot;\n      with_items:\n        - apt-get clean\n        - rm -rf /var/lib/apt/lists/*\n        - dd if=/dev/zero of=/EMPTY bs=1M\n        - rm -f /EMPTY\n        - cat /dev/null &gt; ~/.bash_history\n      ignore_errors: yes</code></pre></div>\n<h3>Create a file for vagrant</h3>\n<ul>\n<li>Vagrantfile</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Vagrant.require_version &quot;&gt;= 1.7.0&quot;\n\nVagrant.configure(&quot;2&quot;) do |config|\n  \n  config.vm.define &quot;bs&quot; do |s|\n    \n    s.vm.box = &quot;ubuntu/xenial64&quot;\n    s.vm.network &quot;private_network&quot;, ip: &quot;192.168.10.101&quot;\n     \n    config.vm.provision &quot;ansible&quot; do |ansible|\n      ansible.verbose = &quot;v&quot;\n      ansible.playbook = &quot;vagrant-provisioning.yml&quot;\n      ansible.extra_vars = { ansible_python_interpreter: &quot;/usr/bin/python3&quot; }\n    end\n     \n    s.vm.provider :virtualbox do |vb|\n      vb.name = &quot;Build Server&quot;\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--memory&quot;, 1024]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--cpus&quot;, &quot;1&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--ioapic&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype1&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype2&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnshostresolver1&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnsproxy1&quot;, &quot;on&quot;]\n    end\n  end\nend</code></pre></div>\n<h3>Install ansible</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ pipenv install ansible\n$ pipenv shell</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vagrant up</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vagrant package --output my.box\n$ vagrant box add mybox my.box\n$ vagrant box list</code></pre></div>\n<ul>\n<li>Vagrantfile</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Vagrant.require_version &quot;&gt;= 1.7.0&quot;\n\nVagrant.configure(&quot;2&quot;) do |config|\n  \n  config.vm.define &quot;s1&quot; do |s|\n    \n    s.vm.box = &quot;my.box&quot;\n    s.vm.hostname = &quot;s1&quot;\n    s.vm.network &quot;private_network&quot;, ip: &quot;192.168.10.101&quot;\n     \n    s.vm.provider :virtualbox do |vb|\n      vb.name = &quot;Server 1&quot;\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--memory&quot;, 1024]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--cpus&quot;, &quot;1&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--ioapic&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype1&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype2&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnshostresolver1&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnsproxy1&quot;, &quot;on&quot;]\n    end\n  end\n\n  config.vm.define &quot;s2&quot; do |s|\n      \n    s.vm.box = &quot;my.box&quot;\n    s.vm.hostname = &quot;s2&quot;\n    s.vm.network &quot;private_network&quot;, ip: &quot;192.168.10.102&quot;\n     \n    s.vm.provider :virtualbox do |vb|\n      vb.name = &quot;Server 2&quot;\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--memory&quot;, 1024]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--cpus&quot;, &quot;1&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--ioapic&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype1&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype2&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnshostresolver1&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnsproxy1&quot;, &quot;on&quot;]\n    end\n  end\n\n  config.vm.define &quot;s3&quot; do |s|\n      \n    s.vm.box = &quot;my.box&quot;\n    s.vm.hostname = &quot;s3&quot;\n    s.vm.network &quot;private_network&quot;, ip: &quot;192.168.10.103&quot;\n     \n    s.vm.provider :virtualbox do |vb|\n      vb.name = &quot;Server 3&quot;\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--memory&quot;, 1024]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--cpus&quot;, &quot;1&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--ioapic&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype1&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--nictype2&quot;, &quot;virtio&quot; ]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnshostresolver1&quot;, &quot;on&quot;]\n      vb.customize [&quot;modifyvm&quot;, :id, &quot;--natdnsproxy1&quot;, &quot;on&quot;]\n    end\n  end\n  \nend</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vagrant destroy\n$ vagrant up\n$ vagrant status</code></pre></div>\n<h2>Setting Docker cluster</h2>\n<h3>connect to master</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vagrant ssh s1\nvagrant@s1 $ docker swarm init --advertise-addr=192.168.10.101\n\nSwarm initialized: current node (z8f6q1qa378s362znnm4x28sx) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join --token SWMTKN-1-314kermev0stgifkvmf8ycwxjv6xct3c279pka3tuc7ouondxi-ecu8v8944cenhh10dk4hz228q 192.168.10.101:2377\n\nTo add a manager to this swarm, run &#39;docker swarm join-token manager&#39; and follow the instructions</code></pre></div>\n<h3>connect to slaves</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vagrant ssh s2\nvagrant@s2 $ docker swarm join --token SWMTKN-1-314kermev0stgifkvmf8ycwxjv6xct3c279pka3tuc7ouondxi-ecu8v8944cenhh10dk4hz228q 192.168.10.101:2377\n---\n$ vagrant ssh s3\nvagrant@s3 $ docker swarm join --token SWMTKN-1-314kermev0stgifkvmf8ycwxjv6xct3c279pka3tuc7ouondxi-ecu8v8944cenhh10dk4hz228q 192.168.10.101:2377</code></pre></div>\n<h3>connect to master</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vagrant ssh s1\nvagrant@s1 $ docker node ls</code></pre></div>\n<p><a href=\"https://asciinema.org/a/KXsnoZGeBOpDOYl4qh8AdleOE\"><img src=\"https://asciinema.org/a/KXsnoZGeBOpDOYl4qh8AdleOE.svg\" alt=\"asciicast\"></a></p>","fields":{"tagSlugs":["/tags/vagrant/","/tags/provisioning/"]},"frontmatter":{"title":"Docker-machineì¼ë¡ Docker í´ë¬ì¤í° êµ¬ì¶","tags":["vagrant","provisioning"],"date":"2019-04-10T23:01:57.000Z","description":"Provisioning Docker machines"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/Docker-machineì¼ë¡ Docker í´ë¬ì¤í° êµ¬ì¶/"}}