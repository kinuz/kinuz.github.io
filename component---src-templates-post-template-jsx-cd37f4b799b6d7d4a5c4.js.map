{"version":3,"sources":["webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostTemplateDetails/index.jsx","webpack:///./src/templates/post-template.jsx","webpack:///./src/components/Layout.js","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["Disqus","props","_this","_Component","call","this","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","render","_this$props","postNode","siteMetadata","disqusShortname","post","frontmatter","url","fields","slug","react_default","a","createElement","main_default","shortname","identifier","title","category_id","onNewComment","Component","PostTemplateDetails","_this$props$data$site","data","site","subtitle","author","markdownRemark","tags","tagSlugs","gatsby_browser_entry","className","to","dangerouslySetInnerHTML","__html","html","moment","date","format","map","tag","i","Badge","color","key","href","twitter","target","rel","name","components_Disqus_Disqus","React","PostTemplate","_post$frontmatter","postTitle","postDescription","description","Layout","Helmet_default","content","components_PostTemplateDetails","pageQuery","children","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","defaultTitle","module","exports","__webpack_require__","Object","defineProperty","value","_extends","assign","arguments","length","source","prototype","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","id","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","displayName","propTypes","string","isRequired","func","defaultProps","location"],"mappings":"uOAwCeA,cApCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CAAEC,OAAQ,IACvBL,EAAKM,mBAAqBN,EAAKM,mBAAmBC,KAAxBC,IAAAR,IAC1BA,EAAKS,kBAAoBT,EAAKS,kBAAkBF,KAAvBC,IAAAR,IAJRA,sCAOnBS,kBAAA,WAAoB,IACNJ,EAAUF,KAAKC,MAAMC,OADfK,MAAA,GAElBP,KAAKQ,SAAS,CAAEN,cAElBC,mBAAA,WACE,IAAMD,EAASF,KAAKC,MAAMC,OAAOK,QACjCL,EAAOO,KAAK,CAAEC,KAAM,4BACpBV,KAAKQ,SAAS,CAAEN,cAElBS,OAAA,WAAS,IAAAC,EAC4BZ,KAAKJ,MAAhCiB,EADDD,EACCC,SAAUC,EADXF,EACWE,aAClB,IAAKA,EAAaC,gBAChB,OAAO,KAET,IAAMC,EAAOH,EAASI,YAChBC,EAAMJ,EAAaI,IAAML,EAASM,OAAOC,KAC/C,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,UAAWX,EAAaC,gBACxBW,WAAYV,EAAKW,MACjBA,MAAOX,EAAKW,MACZT,IAAKA,EACLU,YAAaZ,EAAKY,YAClBC,aAAc7B,KAAKG,yBA/BN2B,+BCmENC,4FA9DbpB,OAAA,WAAS,IAAAqB,EACsBhC,KAAKJ,MAAMqC,KAAKC,KAAKpB,aAA1CqB,EADDH,EACCG,SAAUC,EADXJ,EACWI,OACZpB,EAAOhB,KAAKJ,MAAMqC,KAAKI,eACvBC,EAAOtB,EAAKG,OAAOoB,SAEzB,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CAAMC,UAAU,2BAA2BC,GAAG,KAA9C,cAIFrB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,eACbpB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,sBACbpB,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,sBAAsBzB,EAAKC,YAAYU,OACrDN,EAAAC,EAAAC,cAAA,OACEkB,UAAU,oBAEVE,wBAAyB,CAAEC,OAAQ5B,EAAK6B,QAE1CxB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,qBACbpB,EAAAC,EAAAC,cAAA,uBACauB,IAAO9B,EAAKC,YAAY8B,MAAMC,OAAO,iBAItD3B,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,uBACbpB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,IAAf,SACS,IACNH,GACDA,EAAKW,IAAI,SAACC,EAAKC,GAAN,OACP9B,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CAAME,GAAIQ,EAAKT,UAAU,QACvBpB,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAOC,MAAM,UAAUC,IAAKJ,GACzBlC,EAAKC,YAAYqB,KAAKa,QAK/B9B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGkB,UAAU,4BACVN,EACDd,EAAAC,EAAAC,cAAA,KACEgC,KAAI,uBAAyBnB,EAAOoB,QACpCC,OAAO,SACPC,IAAI,uBAEJrC,EAAAC,EAAAC,cAAA,WALF,IAKSF,EAAAC,EAAAC,cAAA,cAASa,EAAOuB,MALzB,gBAQFtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqC,EAAD,CACE/C,SAAUG,EACVF,aAAcd,KAAKJ,MAAMqC,KAAKC,KAAKpB,uBArDjB+C,IAAM/B,uDCDlCgC,4FACJnD,OAAA,WAAS,IAAAqB,EACqBhC,KAAKJ,MAAMqC,KAAKC,KAAKpB,aAAzCa,EADDK,EACCL,MAAOQ,EADRH,EACQG,SADR4B,EAEM/D,KAAKJ,MAAMqC,KAAKI,eACmCpB,YAAjD+C,EAHRD,EAGCpC,MAA+BsC,EAHhCF,EAGmBG,YACpBA,EAAkC,OAApBD,EAA2BA,EAAkB9B,EAEjE,OACEd,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,KACED,EAAAC,EAAAC,cAAA,aAAWyC,EAAX,MAA0BrC,GAC1BN,EAAAC,EAAAC,cAAA,QAAMoC,KAAK,cAAcU,QAASH,KAEpC7C,EAAAC,EAAAC,cAAC+C,EAAwBtE,KAAKJ,aAdbiE,IAAM/B,WAuBpByC,GAFET,YAEO,sGCxBhBK,2GACJxD,OAAA,WAAS,IACC6D,EAAaxE,KAAKJ,MAAlB4E,SAER,OACEC,EAAAnD,EAAAC,cAAA,OAAKkB,UAAU,UACbgC,EAAAnD,EAAAC,cAACmD,EAAApD,EAAD,CAAQqD,aAAa,kBACpBH,OAPYX,IAAM/B,YAaZqC,wCChBfS,EAAAC,QAAiBC,EAAQ,uCCAzBC,OAAAC,eAAAH,EAAA,cACAI,OAAA,IAGA,IAAAC,EAAAH,OAAAI,QAAA,SAAA1B,GAAmD,QAAAN,EAAA,EAAgBA,EAAAiC,UAAAC,OAAsBlC,IAAA,CAAO,IAAAmC,EAAAF,UAAAjC,GAA2B,QAAAG,KAAAgC,EAA0BP,OAAAQ,UAAAC,eAAAzF,KAAAuF,EAAAhC,KAAyDG,EAAAH,GAAAgC,EAAAhC,IAAiC,OAAAG,GAE/OgC,EAAA,WAAgC,SAAAC,EAAAjC,EAAA7D,GAA2C,QAAAuD,EAAA,EAAgBA,EAAAvD,EAAAyF,OAAkBlC,IAAA,CAAO,IAAAwC,EAAA/F,EAAAuD,GAA2BwC,EAAAC,WAAAD,EAAAC,aAAA,EAAwDD,EAAAE,cAAA,EAAgC,UAAAF,MAAAG,UAAA,GAAuDf,OAAAC,eAAAvB,EAAAkC,EAAArC,IAAAqC,IAA+D,gBAAAI,EAAAC,EAAAC,GAA2L,OAAlID,GAAAN,EAAAK,EAAAR,UAAAS,GAAqEC,GAAAP,EAAAK,EAAAE,GAA6DF,GAAxhB,GAIAG,EAAAC,EAFarB,EAAQ,IAMrBsB,EAAAD,EAFiBrB,EAAQ,IAIzB,SAAAqB,EAAAE,GAAsC,OAAAA,KAAAC,WAAAD,EAAA,CAAuCE,QAAAF,GAY7E,IAAAG,EAAA,iFACAC,GAAA,EAEA,SAAAC,EAAAC,EAAA/G,GACA,IAAAiC,EAAAjC,EAAAiC,aACA+E,EAAAhH,EAAAgH,SACAC,EARA,SAAAR,EAAAS,GAA8C,IAAArD,EAAA,GAAiB,QAAAN,KAAAkD,EAAqBS,EAAAC,QAAA5D,IAAA,GAAoC4B,OAAAQ,UAAAC,eAAAzF,KAAAsG,EAAAlD,KAA6DM,EAAAN,GAAAkD,EAAAlD,IAAsB,OAAAM,EAQ3MuD,CAAApH,EAAA,6BAEA,QAAAqH,KAAAJ,EACAF,EAAAO,KAAAD,GAAAJ,EAAAI,GAIAN,EAAAC,WAEA/E,IACA8E,EAAAQ,UAAA,CACAtF,aAAA,CAAAA,KAKA,IAAAuF,EAAA,SAAAC,GAGA,SAAAD,IAGA,OApCA,SAAAE,EAAAvB,GAAiD,KAAAuB,aAAAvB,GAA0C,UAAAwB,UAAA,qCAkC3FC,CAAAxH,KAAAoH,GAhCA,SAAAK,EAAA1H,GAAiD,IAAA0H,EAAa,UAAAC,eAAA,6DAAyF,OAAA3H,GAAA,iBAAAA,GAAA,mBAAAA,EAAA0H,EAAA1H,EAkCvJ4H,CAAA3H,MAAAoH,EAAAQ,WAAA7C,OAAA8C,eAAAT,IAAAU,MAAA9H,KAAAoF,YAwFA,OAxHA,SAAA2C,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAT,UAAA,kEAAAS,GAAuGD,EAAAxC,UAAAR,OAAAkD,OAAAD,KAAAzC,UAAA,CAAyE2C,YAAA,CAAejD,MAAA8C,EAAAnC,YAAA,EAAAE,UAAA,EAAAD,cAAA,KAA6EmC,IAAAjD,OAAAoD,eAAApD,OAAAoD,eAAAJ,EAAAC,GAAAD,EAAAH,UAAAI,GA2BrXI,CAAAhB,EA8FClB,EAAAK,QAAAzE,WAtFD2D,EAAA2B,EAAA,EACA9D,IAAA,oBACA2B,MAAA,WACAjF,KAAAqI,eAEK,CACL/E,IAAA,qBACA2B,MAAA,WACAjF,KAAAqI,eAEK,CACL/E,IAAA,wBACA2B,MAAA,SAAAqD,EAAAC,GACA,OAAAD,EAAA5G,aAAA1B,KAAAJ,MAAA8B,aAEK,CACL4B,IAAA,SACA2B,MAAA,WACA,IAAAuD,EAAAxI,KAEAJ,EAAAmF,OAAA+B,KAAA9G,KAAAJ,OAAA6I,OAAA,SAAAC,EAAApF,GACA,OAAAkD,EAAAmC,KAAA,SAAAC,GACA,OAAAA,IAAAtF,IACiBoF,EAAAxD,EAAA,GAAsBwD,EAhEvC,SAAArC,EAAA/C,EAAA2B,GAAmM,OAAxJ3B,KAAA+C,EAAkBtB,OAAAC,eAAAqB,EAAA/C,EAAA,CAAkC2B,QAAAW,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAgFO,EAAA/C,GAAA2B,EAAoBoB,EAgE5JwC,CAAA,GAA0BvF,EAAAkF,EAAA5I,MAAA0D,MACpD,IAEb,OAAA4C,EAAAK,QAAAhF,cACA,MACA3B,EACAsG,EAAAK,QAAAhF,cAAA,OAAsDuH,GAAA,qBAGjD,CACLxF,IAAA,kBACA2B,MAAA,WACA,IAAAwB,EAAA,CAIA,IAAAsC,EAAA/I,KAAAgJ,OAAAC,SAAA1H,cAAA,UACA2H,EAAAD,SAAAE,qBAAA,YAAAF,SAAAE,qBAAA,WAEAJ,EAAAK,OAAA,EACAL,EAAAM,KAAA,kBACAN,EAAAO,IAAA,KAAAtJ,KAAAJ,MAAA6B,UAAA,uBAEAyH,EAAAK,YAAAR,GACAtC,GAAA,KAEK,CACLnD,IAAA,aACA2B,MAAA,WACA,IAAAuE,EAAAxJ,KAEAJ,EAAA,GAGA4G,EAAAiD,QAAA,SAAAxC,GAEA,cAAAA,GAAAuC,EAAA5J,MAAAqH,KACArH,EAAAqH,GAAAuC,EAAA5J,MAAAqH,MAKA,oBAAAyC,OACAA,OAAAC,MAAA,CACAC,QAAA,EACAhB,OAAA,WACAlC,EAAA1G,KAAAJ,GAGAI,KAAAkH,KAAAhG,IAAAlB,KAAAkH,KAAAhG,IAAA2I,QAAA,0BAKAC,OAAAC,cAAA,WACArD,EAAA1G,KAAAJ,IAEAI,KAAAgK,uBAKA5C,EA9FA,GAiGAA,EAAA6C,YAAA,eAEA7C,EAAA8C,UAAA,CACApB,GAAA1C,EAAAG,QAAA4D,OAOA1I,UAAA2E,EAAAG,QAAA4D,OAAAC,WAWA1I,WAAA0E,EAAAG,QAAA4D,OAQAxI,MAAAyE,EAAAG,QAAA4D,OASAjJ,IAAAkF,EAAAG,QAAA4D,OAOAvI,YAAAwE,EAAAG,QAAA4D,OAOAtI,aAAAuE,EAAAG,QAAA8D,KAOAzD,SAAAR,EAAAG,QAAA4D,QAGA/C,EAAAkD,aAAA,CACApJ,IAAA,oBAAA4I,OAAA,KAAAA,OAAAS,SAAAhH,MAGAsB,EAAA0B,QAAAa","file":"component---src-templates-post-template-jsx-cd37f4b799b6d7d4a5c4.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDisqusComments from 'react-disqus-comments'\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { toasts: [] }\n    this.notifyAboutComment = this.notifyAboutComment.bind(this)\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this)\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts\n    this.setState({ toasts })\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice()\n    toasts.push({ text: 'New comment available!!' })\n    this.setState({ toasts })\n  }\n  render() {\n    const { postNode, siteMetadata } = this.props\n    if (!siteMetadata.disqusShortname) {\n      return null\n    }\n    const post = postNode.frontmatter\n    const url = siteMetadata.url + postNode.fields.slug\n    return (\n      <ReactDisqusComments\n        shortname={siteMetadata.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    )\n  }\n}\n\nexport default Disqus\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport Disqus from '../Disqus/Disqus'\nimport './style.scss'\nimport { Badge } from \"reactstrap\"\n\nclass PostTemplateDetails extends React.Component {\n  render() {\n    const { subtitle, author } = this.props.data.site.siteMetadata\n    const post = this.props.data.markdownRemark\n    const tags = post.fields.tagSlugs\n\n    return (\n      <div>\n        <div>\n          <Link className=\"post-single__home-button\" to=\"/\">\n            All Posts\n          </Link>\n        </div>\n        <div className=\"post-single\">\n          <div className=\"post-single__inner\">\n            <h1 className=\"post-single__title\">{post.frontmatter.title}</h1>\n            <div\n              className=\"post-single__body\"\n              /* eslint-disable-next-line react/no-danger */\n              dangerouslySetInnerHTML={{ __html: post.html }}\n            />\n            <div className=\"post-single__date\">\n              <em>\n                Published {moment(post.frontmatter.date).format('D MMM YYYY')}\n              </em>\n            </div>\n          </div>\n          <div className=\"post-single__footer\">\n            <div className=\"\">\n              Tags: {' '}\n              {tags &&\n              tags.map((tag, i) => (\n                <Link to={tag} className=\"mr-1\">\n                  <Badge color=\"primary\" key={tag}>\n                    {post.frontmatter.tags[i]}\n                  </Badge>\n                </Link>\n              ))}\n            </div>\n            <hr />\n            <p className=\"post-single__footer-text\">\n              {subtitle}\n              <a\n                href={`https://twitter.com/${author.twitter}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <br /> <strong>{author.name}</strong> on Twitter\n              </a>\n            </p>\n            <div>\n              <Disqus\n                postNode={post}\n                siteMetadata={this.props.data.site.siteMetadata}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport PostTemplateDetails from '../components/PostTemplateDetails'\n\nclass PostTemplate extends React.Component {\n  render() {\n    const { title, subtitle } = this.props.data.site.siteMetadata\n    const post = this.props.data.markdownRemark\n    const { title: postTitle, description: postDescription } = post.frontmatter\n    const description = postDescription !== null ? postDescription : subtitle\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${postTitle} - ${title}`}</title>\n            <meta name=\"description\" content={description} />\n          </Helmet>\n          <PostTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default PostTemplate\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        author {\n          name\n          twitter\n        }\n        disqusShortname\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        tagSlugs\n      }\n      frontmatter {\n        title\n        tags\n        date\n        description\n        tags\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport '../assets/scss/init.scss'\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props\n\n    return (\n      <div className=\"layout\">\n        <Helmet defaultTitle=\"Blog by Kinuz\" />\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}