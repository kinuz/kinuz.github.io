{"version":3,"sources":["webpack:///./src/templates/post-list-template.jsx"],"names":["PostListTemplate","render","console","log","this","props","pageContext","items","data","allMarkdownRemark","edges","forEach","post","push","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Post__WEBPACK_IMPORTED_MODULE_4__","key","node","fields","slug","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","pageTitle","menu","className","_components_Pagination__WEBPACK_IMPORTED_MODULE_5__","current","total","React","Component","pageListQuery"],"mappings":"qNAMMA,4FAEJC,OAAA,WAEEC,QAAQC,IAAIC,KAAKC,MAAMC,aAEvB,IAAMC,EAAQ,GAKd,OAJcH,KAAKC,MAAMG,KAAKC,kBAAkBC,MAC1CC,QAAQ,SAAAC,GACZL,EAAMM,KAAKC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMT,KAAMI,EAAMM,IAAKN,EAAKO,KAAKC,OAAOC,UAGnDP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,UAAS,WAAcC,KAAK,SAClCV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBlB,GACjCO,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASC,QAASvB,KAAKC,MAAMC,YAAYqB,QAASC,MAAOxB,KAAKC,MAAMC,YAAYsB,cAf3DC,IAAMC,WAsBtB9B,YAGR,IAAM+B,EAAa","file":"component---src-templates-post-list-template-jsx-b34015c02f872f2e6e01.js","sourcesContent":["import React from 'react'\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Layout from '../components/Layout'\nimport Post from \"../components/Post\"\nimport Pagebar from \"../components/Pagination\"\n\nclass PostListTemplate extends React.Component {\n\n  render() {\n\n    console.log(this.props.pageContext)\n\n    const items = []\n    const posts = this.props.data.allMarkdownRemark.edges\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />)\n    })\n    return (\n      <Layout pageTitle={`page : 2`} menu=\"posts\">\n        <div className=\"content\">\n          <div className=\"content__inner\">{items}</div>\n          <Pagebar current={this.props.pageContext.current} total={this.props.pageContext.total}/>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default PostListTemplate\n\n\nexport const pageListQuery = graphql`\n    query IndexQuery ($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\n            sort: { order: DESC, fields: [frontmatter___date] }\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    fields {\n                        slug\n                        categorySlug\n                    }\n                    frontmatter {\n                        title\n                        date\n                        category\n                        description\n                        tags\n                    }\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}